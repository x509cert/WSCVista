; Listing generated by Microsoft (R) Optimizing Compiler Version 14.00.50727.762 

	TITLE	c:\junk\vista\Ch06\VirtualProtect\VirtualProtect\VirtualProtect.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?scode@@3PAEA					; scode
_DATA	SEGMENT
?scode@@3PAEA DB 0fcH, 0e8H, 'D', 00H, 00H, 00H, 08bH, 'E<', 08bH, '|', 05H
	DB	'x', 01H, 0efH, 08bH, 'O', 018H, 08bH, '_ ', 01H, 0ebH, 'I', 08bH
	DB	'4', 08bH, 01H, 0eeH, '1', 0c0H, 099H, 0acH, 084H, 0c0H, 't', 07H
	DB	0c1H, 0caH, 0dH, 01H, 0c2H, 0ebH, 0f4H, ';T$', 04H, 'u', 0e5H, 08bH
	DB	'_$', 01H, 0ebH, 'f', 08bH, 0cH, 'K', 08bH, '_', 01cH, 01H, 0ebH
	DB	08bH, 01cH, 08bH, 01H, 0ebH, 089H, '\$', 04H, 0c3H, '1', 0c0H, 'd'
	DB	08bH, '@0', 085H, 0c0H, 'x', 0cH, 08bH, '@', 0cH, 08bH, 'p', 01cH
	DB	0adH, 08bH, 'h', 08H, 0ebH, 09H, 08bH, 080H, 0b0H, 00H, 00H, 00H
	DB	08bH, 'h<_1', 0f6H, '`V', 089H, 0f8H, 083H, 0c0H, '{Ph~', 0d8H
	DB	0e2H, 'sh', 098H, 0feH, 08aH, 0eH, 'W', 0ffH, 0e7H, 'calc.exe', 00H
	DB	00H						; scode
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_wmain
EXTRN	__imp__VirtualFree@12:PROC
EXTRN	__imp__VirtualProtect@16:PROC
EXTRN	_memcpy:PROC
EXTRN	__imp__VirtualAlloc@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars2@12:PROC
EXTRN	__alloca_probe_16:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_AllocaHelper@12:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\junk\vista\ch06\virtualprotect\virtualprotect\virtualprotect.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _wmain
_TEXT	SEGMENT
tv74 = -252						; size = 4
tv76 = -248						; size = 4
__$AllocaPad$$ = -48					; size = 4
_shell$64450 = -36					; size = 4
_pdwOldProtect$64446 = -24				; size = 4
_pBuff$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_wmain	PROC						; COMDAT

; 17   : int _tmain(int argc, _TCHAR* argv[]) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec fc 00 00
	00		 sub	 esp, 252		; 000000fcH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 04 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-252]
  00012	b9 3f 00 00 00	 mov	 ecx, 63			; 0000003fH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00028	c7 45 d0 00 00
	00 00		 mov	 DWORD PTR __$AllocaPad$$[ebp], 0

; 18   :     PVOID pBuff = VirtualAlloc(NULL,sizeof scode,MEM_COMMIT,PAGE_READWRITE );

  0002f	8b f4		 mov	 esi, esp
  00031	6a 04		 push	 4
  00033	68 00 10 00 00	 push	 4096			; 00001000H
  00038	68 8b 00 00 00	 push	 139			; 0000008bH
  0003d	6a 00		 push	 0
  0003f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualAlloc@16
  00045	3b f4		 cmp	 esi, esp
  00047	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004c	89 45 f4	 mov	 DWORD PTR _pBuff$[ebp], eax

; 19   :     if (pBuff) {

  0004f	83 7d f4 00	 cmp	 DWORD PTR _pBuff$[ebp], 0
  00053	0f 84 a4 00 00
	00		 je	 $LN1@wmain

; 20   :         memcpy(pBuff,scode,sizeof scode);

  00059	68 8b 00 00 00	 push	 139			; 0000008bH
  0005e	68 00 00 00 00	 push	 OFFSET ?scode@@3PAEA	; scode
  00063	8b 45 f4	 mov	 eax, DWORD PTR _pBuff$[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 _memcpy
  0006c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0006f	b8 04 00 00 00	 mov	 eax, 4
  00074	83 c0 24	 add	 eax, 36			; 00000024H
  00077	89 85 08 ff ff
	ff		 mov	 DWORD PTR tv76[ebp], eax

; 21   : 
; 22   :         PDWORD pdwOldProtect = (PDWORD)alloca(sizeof DWORD);

  0007d	8b 85 08 ff ff
	ff		 mov	 eax, DWORD PTR tv76[ebp]
  00083	e8 00 00 00 00	 call	 __alloca_probe_16
  00088	89 a5 04 ff ff
	ff		 mov	 DWORD PTR tv74[ebp], esp
  0008e	8d 4d d0	 lea	 ecx, DWORD PTR __$AllocaPad$$[ebp]
  00091	51		 push	 ecx
  00092	8b 95 08 ff ff
	ff		 mov	 edx, DWORD PTR tv76[ebp]
  00098	8b 8d 04 ff ff
	ff		 mov	 ecx, DWORD PTR tv74[ebp]
  0009e	e8 00 00 00 00	 call	 @_RTC_AllocaHelper@12
  000a3	83 85 04 ff ff
	ff 20		 add	 DWORD PTR tv74[ebp], 32	; 00000020H
  000aa	8b 95 04 ff ff
	ff		 mov	 edx, DWORD PTR tv74[ebp]
  000b0	89 55 e8	 mov	 DWORD PTR _pdwOldProtect$64446[ebp], edx

; 23   :         VirtualProtect(pBuff,sizeof scode,PAGE_EXECUTE_READ,pdwOldProtect);

  000b3	8b f4		 mov	 esi, esp
  000b5	8b 45 e8	 mov	 eax, DWORD PTR _pdwOldProtect$64446[ebp]
  000b8	50		 push	 eax
  000b9	6a 20		 push	 32			; 00000020H
  000bb	68 8b 00 00 00	 push	 139			; 0000008bH
  000c0	8b 4d f4	 mov	 ecx, DWORD PTR _pBuff$[ebp]
  000c3	51		 push	 ecx
  000c4	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualProtect@16
  000ca	3b f4		 cmp	 esi, esp
  000cc	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 24   :         typedef void (*RunShell)( void );
; 25   :         RunShell shell = (RunShell)(void*)pBuff;

  000d1	8b 45 f4	 mov	 eax, DWORD PTR _pBuff$[ebp]
  000d4	89 45 dc	 mov	 DWORD PTR _shell$64450[ebp], eax

; 26   :         (*shell)();

  000d7	8b f4		 mov	 esi, esp
  000d9	ff 55 dc	 call	 DWORD PTR _shell$64450[ebp]
  000dc	3b f4		 cmp	 esi, esp
  000de	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 27   : 
; 28   :         VirtualFree(pBuff,0,MEM_RELEASE);

  000e3	8b f4		 mov	 esi, esp
  000e5	68 00 80 00 00	 push	 32768			; 00008000H
  000ea	6a 00		 push	 0
  000ec	8b 45 f4	 mov	 eax, DWORD PTR _pBuff$[ebp]
  000ef	50		 push	 eax
  000f0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__VirtualFree@12
  000f6	3b f4		 cmp	 esi, esp
  000f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
$LN1@wmain:

; 29   :     }
; 30   : 	return 0;

  000fd	33 c0		 xor	 eax, eax

; 31   : }

  000ff	52		 push	 edx
  00100	8b cd		 mov	 ecx, ebp
  00102	50		 push	 eax
  00103	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN6@wmain
  00109	ff 75 d0	 push	 DWORD PTR __$AllocaPad$$[ebp]
  0010c	e8 00 00 00 00	 call	 @_RTC_CheckStackVars2@12
  00111	58		 pop	 eax
  00112	5a		 pop	 edx
  00113	8d a5 f8 fe ff
	ff		 lea	 esp, DWORD PTR [ebp-264]
  00119	5f		 pop	 edi
  0011a	5e		 pop	 esi
  0011b	5b		 pop	 ebx
  0011c	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0011f	33 cd		 xor	 ecx, ebp
  00121	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00126	8b e5		 mov	 esp, ebp
  00128	5d		 pop	 ebp
  00129	c3		 ret	 0
  0012a	8b ff		 npad	 2
$LN6@wmain:
  0012c	01 00 00 00	 DD	 1
  00130	00 00 00 00	 DD	 $LN5@wmain
$LN5@wmain:
  00134	d0 ff ff ff	 DD	 -48			; ffffffd0H
  00138	04 00 00 00	 DD	 4
  0013c	00 00 00 00	 DD	 $LN4@wmain
$LN4@wmain:
  00140	5f		 DB	 95			; 0000005fH
  00141	24		 DB	 36			; 00000024H
  00142	41		 DB	 65			; 00000041H
  00143	6c		 DB	 108			; 0000006cH
  00144	6c		 DB	 108			; 0000006cH
  00145	6f		 DB	 111			; 0000006fH
  00146	63		 DB	 99			; 00000063H
  00147	61		 DB	 97			; 00000061H
  00148	50		 DB	 80			; 00000050H
  00149	61		 DB	 97			; 00000061H
  0014a	64		 DB	 100			; 00000064H
  0014b	24		 DB	 36			; 00000024H
  0014c	00		 DB	 0
_wmain	ENDP
_TEXT	ENDS
END
